# mono.txt

==================================================================================
## 毎朝みる

誰かの役に立っているか？
何が起こるか想像してるか？

勉強 ＝ インデックス化
職人 ＝ 精度とスピード

==================================================================================
## 基本則

//--------------------------------------------------
// 業務３箇条
//--------------------------------------------------
① 手続きから始めよ
② ゴールを遠ざけよ
③ 評価を念頭に置け

//--------------------------------------------------
// プロジェクトマネージメン
//--------------------------------------------------
① 人を巻き込む
② プロセスに責任を持つ
③ 先に評価方法まで考える
④ MTGには選択肢を用意する
⑤ 説明スライドを作る
⑥ ホワイトボードを使う
⑦ 議事録を残す
⑧ ボールは長く持たない

//--------------------------------------------------
// コーディング３箇条
//--------------------------------------------------
① 名前を決めよ
② 論理を切り分けよ
③ フローを考えよ

//--------------------------------------------------
// レビュー４箇条
//--------------------------------------------------
① コードを確認せずに分かる方法を探す
② やってはいけないことを３つ挙げる
③ 「論理」と「フロー」は正しいか？
④ 拡張性・保守性・可読性はどうか？

==================================================================================
## 機動戦士ガンダムUC - episode 7 虹の彼方に

// マリーダ・クルス

その生真面目な心が、他人も自分も傷つける。
落ち着いて周りを見渡せばいい。世界は広い。
こんなにたくさんの人が響き合っている。

あなたは私の光、もう一度私を生んでくれた光でした。
ありがとう、お父さん。

今のお前たちには見えないものが、私には見える。
ここでは、時間さえ輝いて見える。
どんな絶望の中にも、希望は生まれる。
お前は光だ。悲しみすら糧として道を照らせ。姫様と二人で。
人は今戸口に立っている。
いつか肉体をもったまま、そこをくぐれる時がくるのかもしれない。
この虹の彼方に、道は続いている。

// リディー・マーセナス

知っておいて損はない、
俺たちは祝福されて生まれてきたんだってことを。
> 最初からそういってくれれば、分かりやすかったのに。
父親ってのは、いつも一言足りないのさ。
その分は、子供が自分で埋め合わせなくちゃならない。
> 災難、ですね。
ああ。

// バナージ・リンクス

。。それでも、その先にあるものを、
一人の人間として、人を、人のもつ可能性を俺は信じたい。

==================================================================================
## 備忘録

『笑顔』と『人を想う心』

『評価』のない仕事はない

1. 大局観 - 全体と部分を見て形勢判断する力
2. 洞察力 - ぼんやりとしたものを具体化する力
3. 注意力 - プレゼンスオブマインド
4. 情熱   - ワクワクすること

難しいことを1回するより、簡単なことを100回完璧にする方が難しい

Mindfulness
Goal (何がどうなっていればいい？)
Because (というのは？)

GMM (Goal, Motivation and Mindfulness)
  Goal:        "何が、いつまでに、どうなってればいいのか？"
  Motivation:  "何が、誰が、うれしいのか？"
  Mindfulness: "ペン回し3回"

KMM
  K: "気持ちわるい"
  M: "めんどくさい"
  M: "もったいない"

[参考]シャーロックホームズの思考術
  - マインドフルネスとモチベーション
  - 可能性と構成単位(ビルディングブロック)
  - プレゼンスオブマインド
  - 確証バイアス
  - ピンクの像

  1. 自分を知る
  2. 観察する
  3. 想像する
  4. 推理する
  5. 学習する

迎年惜刻
  "一年を惜しまず、一刻を惜しむ。"

"手順"から始めよ
"ゴール"から始めよ
"楽しみ"から始めよ

Comma   -- 句点を打つ
Goal    -- 何がどうなっていないといけない？
So what -- だから何が言いたい？
Why so  -- なぜそう言える？

プロジェクトマネージメント
0. 巻き込む。
1. プロセスに責任を持つ。     -- 自分を使う自分
2. 論理的に考える。           -- 記号論理＋なぜ10回
3. 誰もボールを持たないはNG。
4. 会議には選択肢を用意する。 -- 選択肢にはインパクト試算
5. 説明資料を作る。           -- スライド、ExcelはNG。
6. ホワイトボードを用いる。
7. 議事録を残す。             -- 決まったこと、宿題、Next Action
8. 常に評価を念頭に置く。

リラックスする = 後輩といるときの自分を想像する

・テンションを上げる。
・縁を大事にする。
・口角を上げて笑う。
・深く呼吸する。
・目線は相手の後ろに置く。
・優位に立とうとしない。
・好かれようとしない。
・負けたら礼を言う。
・よいところをほめる。
・欠けているところを許す。
・友達から始める。

==================================================================================
## MBA 初期設定

インストールするもの
・Xcode

.vimrcサンプル
http://archiva.jp/test/sample_vimrc.txt

・顔文字登録
http://matsucon.net/material/dic/

==================================================================================
## まおゆう

自分の運命を掴めない存在は、虫です。

私たちを人間にしてください。

メイドを嫌う人は、この世界には存在しません。
たとえそのメイドが、新人であってもです。

魂持つものの努力の賜物だ。

戦争の基本は物量です。
飽和攻撃で殿方の理性など崩壊させてしまえば、戦術の必要性すらないのです。

==================================================================================
## 中二病でも恋がしたい

自分は人とは違う。自分だけは気づいているから特別だ、とか。
そういうのに凄い捕われてる、っていうか。

ただ結局、人はいつも何かに病んでるのかなって。

お前には力がある。
..誰でもない、お前は特別なのだ。
..しょうがないな。

==================================================================================
## Hack Day 開発

□ じゃんけんアプリ

r w d l
--------
0 2 0 1
1 0 1 2
2 1 2 0

□ VocalKit
http://www.slideshare.net/t26v0748/vocal-kit
ダウンロード
https://github.com/KingOfBrian/VocalKit

レオ君のサーバ
$ ssh -i .ssh/id_rsa www2237uj.sakura.ne.jp

==================================================================================
## Android SDKインストール

// Javaインストール

http://gano-web.com/mac-android.html

$ javas -version

// Eclipseインストール

http://www.eclipse.org/downloads/
$ uname -a

$ cd Downloads
$ tar zxvf eclipse-java-juno-SR1-macosx-cocoa-x86_64.tar
$ mv eclipse /Applications/

// Preiadesインストール

http://mergedoc.sourceforge.jp
Pleiades をダウンロード

features, plagins をコピー

Eclise > パッケージの内容を表示 > Contents/MacOS/eclipse.ini に以下の行を追記
+ -javaagent:../../../plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar

// Android SDKインストール

http://developer.android.com/sdk/index.html

$ mv Downloads/adt-bundle-mac-x86_64 /Applications/

Eclipse > ヘルプ > 新規ソフトウェアのインストール
名前: Android
fロケーション: https://dl-ssl.google.com/android/eclipse/

> 再起動
ターゲット・ロケーション: /Applications/adt-bundle-mac-x86_64

// パスを通す

$ vim .bash_profile
+ export PATH=$PATH:/Applications/adt-bundle-mac-x86_64/platform-tools
$ (再起動)
$ adb

==================================================================================
## Androidアプリ開発

まとめ
http://arpanet617.blog.fc2.com/blog-entry-28.html
$ git clone git://github.com/yshiga/android

Xcodeコマンドラインツール
Xcode->Preference->Downloads

MacPorts インストール
http://www.macports.org/install.php

.screenrc
http://d.hatena.ne.jp/s-edy/20090706/1246891026

$ sudo port install git-core +svn +doc
$ git --version

$ git config --global user.name "nito7"
$ git config --global user.email "naoki.itoh.7kusa@gmail.com"
$ git config --global color.ui "auto"
$ git config --list

$ mkdir git
$ cd git
$ git init
$ git clone git://github.com/yshiga/android

Gitイメージ図
http://www.slideshare.net/to_ueda/git-6821390

図解Git
http://www.mew.org/~kazu/proj/visual-git-guide/

[WorkTree] -----add----> [Stage] --commit--> [LocalRepositry] --push--> [RemoteRepositry]
[WorkTree] ------------commit -a ----------> [LocalRepositry] --push--> [RemoteRepositry]
[workTree] <--checkout-- [Stage] <--reset--- [LocalRepositry]           [RemoteRepositry]
[workTree] <-------------------------------- [LocalRepositry] <--pull-- [RemoteRepositry]
[workTree] <------------merge--------------- [LocalRepositry] <-fetch-- [RemoteRepositry]

----

/* コンテンツアシスト有効化 */
http://www.noridon.net/weblogs/archives/2007/01/macos_xflex_bui_1.html
=> システム環境設定 -> キーボード -> Spotligth -> ^スペース 無効化

/* エミュレータの電源状態変更 */
http://www.adakoda.com/adakoda/2010/07/android-29.html

/* masterにpushできない */
http://samura1.net/2012/10/github_first/
http://bang.hateblo.jp/entry/20110529/1306691268

/* コミット*/
$ git commit -a
or
$ git add [filename]
$ git commit -m "initial commit"
$ git push -u origin master
fatal: remote error:
  You can't push to git://github.com/yshiga/android.git
  Use git@github.com:yshiga/android.git
$ vim android/.git/config
 -  url = git://github.com/yshiga/android
 +  url = git@github.com:yshiga/android
$ push -u origin master

/* チェックアウト */
$ git pull
or
$ git fetch
$ git diff FETCH_HEAD
$ git merge FETCH_HEAD
$ git reset --hard
$ git merge FETCH_HEAD
$ git status -s

$ git clone git://github.com/yshiga/android
Cloning into 'android'...
fatal: remote error:
  Repository not found.
$ rm -rf .git
$ git clone git://github.com/yshiga/android

$ adb devices

       |  inserted  |  uninserted  |
-------|------------|--------------|
0-20%  |  sayHa     |  sayClaim    |
20-99% |  sayAn     |  sayMotto    |
100%   |  sayIku    |  sayGoodbye  |

==================================================================================
## WebSocket入門

http://gihyo.jp/dev/feature/01/websocket
http://mvnrepository.com/
http://download.eclipse.org/jetty/stable-7/apidocs/allclasses-noframe.html

==================================================================================
## Firefox OS アプリ開発入門

http://gitfab.org/dadaa/firefoxos-workshop-simple/
http://gitfab.org/dadaa/firefoxos-workshop-webapi/

https://developer.mozilla.org/ja/docs/Web/Apps/Manifest
https://developer.mozilla.org/ja/docs/WebAPI

RGB反転処理
1. Canvasに現在の画像を保存
2. 画像としてRGBを反転
3. 再描画

Android Firefox メニュー > ツール > アプリ
> インストール済みのアプリ管理画面 > Firefox Appli MarketPlace


☆ インストールページの作成
----
  var Apps = navigator.mozApps;
  var manifestUrl = "http://..."; // マニフェストフィアルのURL

  var request = Apps.install(manifestUrl);
  request.onsuccess = function() {
    // インストールが成功した場合の処理
  };
  request.onerror = function() {
    // インストールが失敗した場合の処理
  };
----

==================================================================================
## R インストール

http://www.macports.org/install.php
$ tar zxvf MacPorts-2.2.0.tar.gz
$ cd MacPorts-2.2.0
$ ./configure && make && sudo make install
$ sudo port -v selfupdate
$ sudo port install R
$ R
> install.packages("ggplot2", dependencies=TRUE)
> library(ggplot2)
> english.exam = data.frame(
+ Reading = c(54, 23, 82),
+ Writing = c(61, 35, 47))
> g = ggplot(english.exam, aes(Reading, Writing))
> g + geom_point()

==================================================================================
## MacVim

設定ファイル
$ vim /Applications/MacVim.app/Contents/Resources/vim/gvimrc

==================================================================================
## NodeJS

$ sudo yum install epel-release
$ sudo yum install nodejs
$ node -v
$ sudo yum install npm
$ npm -v
$ sudo npm install -g yo

==================================================================================
## Screen でフォルダが色分けされない

$ git clone git://git.savannah.gnu.org/screen.git
$ cd screen/src
$ autoconf
$ autoheader
$ sudo yum install ncurses-devel
$ ./configure  --enable-colors256
$ sudo make & make install

==================================================================================
## Golang

$ tar zxvf go1.4.linux-amd64.tar.gz
$ vim .bashrc
+ export GOROOT=$HOME/go
+ export GOPATH=$HOME/_go
+ export GOOS=linux
+ export GOARCH=arm64
+ export PATH=$PATH:$GOROOT/bin
$ sudo yum install mercurial


チュートリアル
http://golang.jp/go_tutorial

==================================================================================
## RStudio

$ sudo yum install R
$ sudo yum install openssl098e
$ wget http://download2.rstudio.org/rstudio-server-0.98.1091-x86_64.rpm
$ sudo yum install --nogpgcheck rstudio-server-0.98.1091-x86_64.rpm
$ rstudio-server verify-installation
$ rstudio-server start
$ chkconfig --list messagebus
$ sudo chkconfig messagebus on
$ sudo rstudio-server start
> http://www12480uf.sakura.ne.jp:8787

==================================================================================
## Ruby on Rails 導入

http://qiita.com/ytr_i/items/5892cbaf7b6f26bafb9d

// rbenv
$ sudo yum install git
$ sudo yum install gcc-c++ glibc-headers openssl-devel readline libyaml-devel readline-devel zlib zlib-devel
$ git clone https://github.com/sstephenson/rbenv.git
$ sudo mv rbenv/ /usr/local/
$ sudo vi /etc/profile
+ export RBENV_ROOT="/usr/local/rbenv"
+ export PATH="${RBENV_ROOT}/bin:${PATH}"
+ eval "$(rbenv init -)"
$ source /etc/profile
$ rbenv -v

// ruby-build
$ git clone https://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build

// ruby
$ rbenv install -l
$ sudo yum install libffi-devel
$ rbenv install -v 2.2.0
$ rbenv rehash
$ rbenv global 2.2.0
$ ruby -v

// rails
$ gem update --system
$ gem install --no-ri --no-rdoc rails
$ gem install bundler
$ rbenv rehash
$ rails -v

==================================================================================
## ディレクトリカラー

$ cp /etc/DIR_COLORS ~/.dir_colors
$ eval `dircolors ~/.dir_colors -b`

==================================================================================
## Wordpress

http://www.adminweb.jp/wordpress/install/

$ sudo yum install php mysql-server
$ sudo /etc/rc.d/init.d/httpd restart #=> php ok
$ sudo vi /etc/my.cnf
+ character-set-server=utf8
$ sudo /etc/rc.d/init.d/mysqld start #=> mysql ok
$ mysql -u root
> set password = password('hoge');
> create database wps_db;
> grant all on wps_db.* to 'wps'@'localhost' identified by 'hoge';
> exit

$ sudo yum install php-mysql
$ sudo vi /etc/php.ini
+ extension=mysql.so
$ sudo /etc/rc.d/init.d/httpd restart

==================================================================================
## WatchKit

https://developer.apple.com/watchkit/
http://wonderpla.net/blog/engineer/WatchKit_HelloWorld/

==================================================================================
## Capistrano

http://qiita.com/ea54595/items/12ab7b3a8213b35cca10

// とりあえず、プロジェクト作成

$ rails new test01
$ cd test01
$ bundle install  #=> sqliteのエラー
$ yum install sqlite-devel
$ gem install sqlite3-ruby
$ bundle install

// Capistranoインストール
$ gem install capistrano
$ cap install

==================================================================================
## Watch Apps

http://iphonedev.tv/blog/2014/11/21/watchkit-swift-tutorial-download-xcode-62-beta-and-start-making-apple-watch-apps


==================================================================================
## Shebang

http://qiita.com/tueda/items/369215b99316b2e9f3d8



==================================================================================
## MacにRailsをインストールする

Homebrewインストール
$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
$ brew -v
$ brew update
$ brew install rbenv ruby-build
$ echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
$ source ~/.bash_profile

$ sudo gem install rails --no-ri --no-rdoc

railsインストール時にiconv.hで起こられた場合
$ xcode-select --install

railsインストール時でlibxml2で起こられた場合
$ brew tap homebrew/dupes
$ brew install libxml2 libxslt libiconv
$ brew link --force libxml2 libxslt libiconv
$ bundle config build.nokogiri --use-system-libraries --with-iconv-dir="$(brew --prefix libiconv)"
  ↓
ダメだったのでnokogiriを再インストールする
$ NOKOGIRI_USE_SYSTEM_LIBRARIES=1 sudo gem install nokogiri --no-rdoc --no-ri
  ↓
これでもダメなので
$ sudo gem install nokogiri -- --use-system-libraries --with-iconv-dir="$(brew --prefix libiconv)" --with-xml2-config="$(brew --prefix libxml2)/bin/xml2-config" --with-xslt-config="$(brew --prefix libxslt)/bin/xslt-config"
  ↓
$ rails new book #=> ダメだ

バージョン下げたら行けた
$ sudo gem install rails --version 4.1.0 --no-ri --no-rdoc
$ sudo gem install nokogiri --version 1.6.0 --no-ri --no-rdoc
$ vim ~/.bashrc
+ export PATH=/Users/naoki/.rbenv/shims:$PATH

==================================================================================
## Railsテンプレート

http://ruby-rails.hatenadiary.com/entry/20141120/1416483136

$ rails g controller Products index
$ rails g model Product name:string price:integer released_on:date
$ rake db:migrate
$ vim db/seeds.rb
$ rake db:seed
$ rake db:migrate
$ vim app/controllers/products_controller.rb
$ vim app/views/products/index.html.erb
$ vim config/routes.rb
$ rails s

CSVアップロード機能追加
[ ]application.rb: ライブラリ読み込み
[ ]index.html.erb: 入力フォーム追加
[ ]route.rb: importアクションを追加
[ ]products_controller.rb: importアクションでProduct.importを呼出
[ ]product.rb: DB更新処理を定義

==================================================================================
## Deep learning

http://qiita.com/icoxfog417/items/65e800c3a2094457c3a0

 ---- Torch 7 ----

http://torch.ch/docs/getting-started.html#_

$ curl -sk https://raw.githubusercontent.com/torch/ezinstall/master/install-deps | bash
$ git clone https://github.com/torch/distro.git ~/torch --recursive
$ cd ~/torch; ./install.sh

 ---- cenos 6.5 => 7 ----

## 参考
http://fnya.cocolog-nifty.com/blog/2014/08/centos-65-cento.html
http://orebibou.com/2014/07/centos-6-5%E3%81%8B%E3%82%897%E3%81%B8%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89/

## 手順
$ cat /etc/redhat-release
$ yum -y update
$ reboot

$ yum -y install openscap pcre-devel libxml2-devel libxslt-devel m2crypto python-simplejson mod_wsgi

$ rpm -ivh http://dev.centos.org/centos/6/upg/x86_64/Packages/preupgrade-assistant-1.0.2-36.0.1.el6.centos.x86_64.rpm
$ rpm -ivh http://dev.centos.org/centos/6/upg/x86_64/Packages/preupgrade-assistant-contents-0.5.14-1.el6.centos.noarch.rpm
$ rpm -ivh http://dev.centos.org/centos/6/upg/x86_64/Packages/preupgrade-assistant-ui-1.0.2-36.0.1.el6.centos.x86_64.rpm
$ rpm -ivh http://dev.centos.org/centos/6/upg/x86_64/Packages/redhat-upgrade-tool-0.7.22-3.el6.centos.noarch.rpm

$ rpm --import http://ftp.plusline.de/centos/7.0.1406/os/x86_64/RPM-GPG-KEY-CentOS-7

$ preupg -s CentOS6_7

$ redhat-upgrade-tool-cli --network 7.0 --instrepo http://mirror.centos.org/centos/7/os/x86_64/ --force
$ reboot
  ↓
SSH接続できなくなった


==================================================================================
